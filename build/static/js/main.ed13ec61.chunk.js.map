{"version":3,"sources":["images/study.jpg","images/worky.jpg","images/groupy.jpg","About.js","LandingItem.js","Brief.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Row","Col","md","id","style","backgroundColor","dist_default","speed","Component","LandingItem","_this","state","study","company","association","imageRender","bind","assertThisInitialized","handleStudyHover","handleCompanyHover","handleAssociationHover","setState","src","require","onMouseOver","Brief","App","isOpen","toggle","Container","fluid","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","src_About","src_Brief","src_LandingItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oMAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wSC8BzBC,qBAtBb,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACZH,0EAKN,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,MACNL,EAAAC,EAAAC,cAAA,OAAKI,GAAG,YAAYC,MAAO,CAAEC,gBAAiB,UAC5CR,EAAAC,EAAAC,cAAA,OAAKI,GAAG,cACRN,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAQS,MAAO,GACbV,EAAAC,EAAAC,cAAA,6CAbMS,cCyDLC,qBA1Db,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACjBC,EAAAnB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMH,KACDqB,MAAQ,CACXC,OAAO,EACPC,SAAS,EACTC,aAAa,GAEfJ,EAAKK,YAAcL,EAAKK,YAAYC,KAAjBzB,OAAA0B,EAAA,EAAA1B,QAAA0B,EAAA,EAAA1B,CAAAmB,KACnBA,EAAKQ,iBAAmBR,EAAKQ,iBAAiBF,KAAtBzB,OAAA0B,EAAA,EAAA1B,QAAA0B,EAAA,EAAA1B,CAAAmB,KACxBA,EAAKS,mBAAqBT,EAAKS,mBAAmBH,KAAxBzB,OAAA0B,EAAA,EAAA1B,QAAA0B,EAAA,EAAA1B,CAAAmB,KAC1BA,EAAKU,uBAAyBV,EAAKU,uBAAuBJ,KAA5BzB,OAAA0B,EAAA,EAAA1B,QAAA0B,EAAA,EAAA1B,CAAAmB,KAVbA,kFAcjBjB,KAAK4B,SAAS,CAACT,OAAO,EAAMC,SAAS,EAAOC,aAAa,iDAIzDrB,KAAK4B,SAAS,CAACT,OAAO,EAAOC,SAAS,EAAMC,aAAa,qDAIzDrB,KAAK4B,SAAS,CAACT,OAAO,EAAOC,SAAS,EAAOC,aAAa,0CAI1D,OAAIrB,KAAKkB,MAAMC,MACNf,EAAAC,EAAAC,cAAA,OAAKuB,IAAKC,EAAQ,MAChB9B,KAAKkB,MAAME,QACbhB,EAAAC,EAAAC,cAAA,OAAKuB,IAAKC,EAAQ,MAElB1B,EAAAC,EAAAC,cAAA,OAAKuB,IAAKC,EAAQ,uCAK3B,OACE1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,GAAG,eACNN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KACNL,EAAAC,EAAAC,cAAA,OAAKI,GAAG,cACNN,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,KAAGyB,YAAa/B,KAAKyB,kBAArB,UACArB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGyB,YAAa/B,KAAK0B,oBAArB,WACAtB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGyB,YAAa/B,KAAK2B,wBAArB,iBAGJvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KACNL,EAAAC,EAAAC,cAAA,OAAKI,GAAG,YACLV,KAAKsB,wBAnDQP,cCoBXiB,qBAnBb,SAAAA,EAAYnC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GAAAlC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KACZH,0EAIN,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,MACNL,EAAAC,EAAAC,cAAA,OAAKI,GAAG,oBACNN,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,sHAXQS,cCwDLkB,cAlDb,SAAAA,EAAYpC,GAAO,IAAAoB,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACjBhB,EAAAnB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMH,KAEDqB,MAAQ,CACXgB,QAAQ,GAEVjB,EAAKkB,OAASlB,EAAKkB,OAAOZ,KAAZzB,OAAA0B,EAAA,EAAA1B,QAAA0B,EAAA,EAAA1B,CAAAmB,KANGA,wEAUjBjB,KAAK4B,SAAS,CAAEM,QAASlC,KAAKkB,MAAMgB,0CAIpC,OACE9B,EAAAC,EAAAC,cAAA,OAAKI,GAAG,OACNN,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAWC,OAAK,GACdjC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MACjCrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAahC,GAAG,OAAOiC,KAAK,KAA5B,YACAvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeC,QAAS7C,KAAKmC,SAC7B/B,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAUZ,OAAQlC,KAAKkB,MAAMgB,OAAQa,QAAM,GACzC3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC7B3C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,MAEA9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,gBAGA/C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,kBAGA/C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,qBAGA/C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,kBAOR/C,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,eA5CQvC,aCEEwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ed13ec61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/study.f46d4d44.jpg\";","module.exports = __webpack_public_path__ + \"static/media/worky.f1e6eb7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/groupy.cddc79f5.jpg\";","import React, { Component } from 'react';\nimport { Col, Card, CardText, CardBody,\n  CardTitle, Button, Row } from 'reactstrap';\n\nimport Typing from 'react-typing-animation';\nimport './css/About.css';\n\nclass About extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"12\">\n          <div id=\"about-row\" style={{ backgroundColor: 'black' }}>\n            <div id=\"about-text\">\n            <Typing speed={2}>\n              <p>c:// hi, I'm athena_</p>\n            </Typing>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Col, Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Row } from 'reactstrap';\nimport './css/LandingItem.css';\n\nclass LandingItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      study: false,\n      company: false,\n      association: false\n    };\n    this.imageRender = this.imageRender.bind(this);\n    this.handleStudyHover = this.handleStudyHover.bind(this);\n    this.handleCompanyHover = this.handleCompanyHover.bind(this);\n    this.handleAssociationHover = this.handleAssociationHover.bind(this);\n  }\n\n  handleStudyHover() {\n    this.setState({study: true, company: false, association: false});\n  }\n\n  handleCompanyHover() {\n    this.setState({study: false, company: true, association: false});\n  }\n\n  handleAssociationHover() {\n    this.setState({study: false, company: false, association: true});\n  }\n\n  imageRender() {\n    if (this.state.study) {\n      return <img src={require(\"./images/study.jpg\")} />;\n    } else if (this.state.company) {\n      return <img src={require(\"./images/worky.jpg\")} />\n    } else {\n      return <img src={require(\"./images/groupy.jpg\")} />\n    }\n  }\n\n  render() {\n    return (\n      <Row id=\"landing-row\">\n        <Col md=\"6\">\n          <div id=\"categories\">\n            <p>help whether you're looking for a...</p>\n            <a onMouseOver={this.handleStudyHover}>school</a>\n            <br/>\n            <a onMouseOver={this.handleCompanyHover}>company</a>\n            <br/>\n            <a onMouseOver={this.handleAssociationHover}>association</a>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div id=\"side-img\">\n            {this.imageRender()}\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default LandingItem;\n","import React, { Component } from 'react';\nimport { Col, Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Row } from 'reactstrap';\nimport './css/Brief.css';\n\nclass Brief extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"12\">\n          <div id=\"text-description\">\n            <h2>how athena works...</h2>\n            <p>she informs your career decisions and helps you\n            choose the right environments to study and work</p>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Brief;\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Collapse, Navbar, NavbarToggler,\n  NavbarBrand, Nav, NavLink, NavItem, UncontrolledDropdown,\n  DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport './css/App.css';\nimport About from './About.js';\nimport LandingItem from './LandingItem.js';\nimport Brief from './Brief.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <Container fluid>\n          <header>\n            <Navbar color=\"light\" light expand=\"md\">\n              <NavbarBrand id=\"logo\" href=\"/\"> athena </NavbarBrand>\n              <NavbarToggler onClick={this.toggle} />\n              <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                  </NavItem>\n                  <NavLink>\n                    schools\n                  </NavLink>\n                  <NavLink>\n                    companies\n                  </NavLink>\n                  <NavLink>\n                    associations\n                  </NavLink>\n                  <NavLink>\n                    login\n                  </NavLink>\n                </Nav>\n              </Collapse>\n            </Navbar>\n          </header>\n          <About />\n          <Brief />\n          <LandingItem />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}